# Generated by Django 4.0.1 on 2022-09-16 07:20

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(db_column='CountryID', primary_key=True, serialize=False, verbose_name='CountryID')),
                ('client', models.IntegerField(db_column='Client')),
                ('country_code', models.CharField(db_column='CountryCode', max_length=2, unique=True)),
                ('country_name', models.CharField(db_column='CountryName', max_length=50)),
                ('region', models.CharField(blank=True, db_column='Region', max_length=30)),
                ('geography', models.CharField(blank=True, db_column='Geography', max_length=30)),
                ('region_value', models.CharField(blank=True, db_column='Region_Value', max_length=30)),
                ('created_date', models.DateTimeField(auto_now_add=True, db_column='CreatedDateTime', verbose_name='CreatedDateTime')),
                ('updated_date', models.DateTimeField(auto_now=True, db_column='UpdatedDateTime', verbose_name='UpdatedDateTime')),
                ('region_volme', models.CharField(blank=True, db_column='Region_VolME', max_length=30)),
            ],
            options={
                'verbose_name': 't_Country',
                'verbose_name_plural': 't_Country',
                'unique_together': {('client', 'country_code')},
            },
        ),
        migrations.CreateModel(
            name='CustomerGroup',
            fields=[
                ('id', models.AutoField(db_column='CustomerGroupId', primary_key=True, serialize=False, verbose_name='CustomerGroupId')),
                ('customer_group_code', models.CharField(blank=True, db_column='CustomerGroupCode', max_length=50, verbose_name='CustomerGroupCode')),
                ('start_date', models.DateTimeField(auto_now_add=True, db_column='StartDate', verbose_name='StartDate')),
                ('end_date', models.DateTimeField(db_column='EndDate', default=datetime.datetime(2099, 1, 1, 0, 0), verbose_name='EndDate')),
                ('status', models.BooleanField(db_column='isActive', default=True, verbose_name='Status')),
                ('employee_code', models.ForeignKey(blank=True, db_column='EmployeeCode', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='EmployeeCode')),
            ],
            options={
                'verbose_name': 't_CustomerGroup',
                'verbose_name_plural': 't_CustomerGroup',
            },
        ),
        migrations.CreateModel(
            name='ProfitCenterStaging',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client', models.IntegerField(verbose_name='Client')),
                ('profit_center_code', models.CharField(blank=True, max_length=10, verbose_name='ProfitCenterCode')),
                ('profit_center_desc', models.CharField(blank=True, max_length=50, verbose_name='ProfitCenterDesc')),
                ('company_code', models.CharField(blank=True, max_length=4, verbose_name='CompanyCode')),
                ('business_line', models.CharField(blank=True, max_length=50, verbose_name='BusinessLine')),
                ('business_geography', models.CharField(blank=True, max_length=50, verbose_name='BusinessGeography')),
                ('business_segment', models.CharField(blank=True, max_length=50, verbose_name='BusinessSegment')),
                ('mis_business_vertical', models.CharField(blank=True, max_length=50, verbose_name='MISBusinessVertical')),
                ('mis_business_unit', models.CharField(blank=True, max_length=50, verbose_name='MISBusinessUnit')),
                ('business_brand', models.CharField(blank=True, max_length=50, verbose_name='BusinessBrand')),
                ('product_group', models.CharField(blank=True, max_length=50, verbose_name='ProductGroup')),
                ('flash_pg', models.CharField(blank=True, max_length=50, verbose_name='FlashPG')),
                ('me_tel_pg', models.CharField(blank=True, max_length=50, verbose_name='MeTelPG')),
                ('status', models.BooleanField(default=True, verbose_name='Status')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='CreatedDateTime')),
                ('updated_date', models.DateTimeField(auto_now_add=True, verbose_name='UpdatedDateTime')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is_deleted')),
            ],
            options={
                'verbose_name': 't_ProfitCenterStaging',
                'verbose_name_plural': 't_ProfitCenterStaging',
                'unique_together': {('client', 'profit_center_code', 'company_code')},
            },
        ),
        migrations.CreateModel(
            name='ProfitCenterHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=1000)),
                ('comments', models.CharField(blank=True, max_length=1000)),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='CreatedDateTime')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='UpdatedDateTime')),
                ('approver_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='PCApproverID', to=settings.AUTH_USER_MODEL, verbose_name='PCApproverID')),
                ('profit_center_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ProfitCenterCode', to='management.profitcenterstaging', verbose_name='ProfitCenterCode')),
                ('requester_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='PCRequesterID', to=settings.AUTH_USER_MODEL, verbose_name='PCRequesterID')),
            ],
            options={
                'verbose_name': 't_ProfitCenterHistory',
                'verbose_name_plural': 't_ProfitCenterHistory',
            },
        ),
        migrations.CreateModel(
            name='ProfitCenter',
            fields=[
                ('id', models.AutoField(db_column='ProfitCenterID', primary_key=True, serialize=False, verbose_name='ProfitCenterID')),
                ('client', models.IntegerField(db_column='Client', verbose_name='Client')),
                ('profit_center_code', models.CharField(db_column='ProfitCenterCode', max_length=10, verbose_name='ProfitCenterCode')),
                ('profit_center_desc', models.CharField(blank=True, db_column='ProfitCenterDesc', max_length=50, verbose_name='ProfitCenterDesc')),
                ('company_code', models.CharField(db_column='CompanyCode', max_length=4, verbose_name='CompanyCode')),
                ('business_line', models.CharField(blank=True, db_column='BusinessLine', max_length=50, null=True, verbose_name='BusinessLine')),
                ('business_geography', models.CharField(blank=True, db_column='BusinessGeography', max_length=50, verbose_name='BusinessGeography')),
                ('business_segment', models.CharField(blank=True, db_column='BusinessSegment', max_length=50, verbose_name='BusinessSegment')),
                ('mis_business_vertical', models.CharField(blank=True, db_column='MISBusinessVertical', max_length=50, verbose_name='MISBusinessVertical')),
                ('mis_business_unit', models.CharField(blank=True, db_column='MISBusinessUnit', max_length=50, verbose_name='MISBusinessUnit')),
                ('business_brand', models.CharField(blank=True, db_column='BusinessBrand', max_length=50, verbose_name='BusinessBrand')),
                ('product_group', models.CharField(blank=True, db_column='ProductGroup', max_length=50, verbose_name='ProductGroup')),
                ('flash_pg', models.CharField(blank=True, db_column='FlashPG', max_length=50, verbose_name='FlashPG')),
                ('me_tel_pg', models.CharField(blank=True, db_column='MeTelPG', max_length=50, verbose_name='MeTelPG')),
                ('is_active', models.BooleanField(db_column='Status', default=True, verbose_name='Status')),
                ('created_date', models.DateTimeField(auto_now_add=True, db_column='CreatedDateTime', verbose_name='CreatedDateTime')),
                ('updated_date', models.DateTimeField(auto_now=True, db_column='UpdatedDateTime', verbose_name='UpdatedDateTime')),
                ('business_unit', models.CharField(blank=True, db_column='BusinessUnit', max_length=50, verbose_name='BusinessUnit')),
                ('sbu', models.CharField(blank=True, db_column='SBU', max_length=50, verbose_name='SBU')),
            ],
            options={
                'verbose_name': 't_ProfitCenter',
                'verbose_name_plural': 't_ProfitCenter',
                'ordering': ['id'],
                'unique_together': {('client', 'profit_center_code', 'company_code')},
            },
        ),
        migrations.CreateModel(
            name='EmployeeRequestHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(default='New', max_length=10)),
                ('comments', models.CharField(blank=True, max_length=1000)),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='CreatedDateTime')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='UpdatedDateTime')),
                ('start_date', models.DateTimeField(default=datetime.datetime.now, verbose_name='StartDate')),
                ('end_date', models.DateTimeField(blank=True, default=None, null=True, verbose_name='EndDate')),
                ('approver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ApproverID', to=settings.AUTH_USER_MODEL, verbose_name='ApproverID')),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='countryID', to='management.country', verbose_name='CountryID')),
                ('created_by', models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='createrID', to=settings.AUTH_USER_MODEL, verbose_name='createrID')),
                ('profit_center', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='management.profitcenter', verbose_name='ProfitCenterID')),
                ('requester', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='RequesterID', to=settings.AUTH_USER_MODEL, verbose_name='RequesterID')),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='UpdaterID', to=settings.AUTH_USER_MODEL, verbose_name='UpdaterID')),
            ],
            options={
                'verbose_name': 't_EmployeeRequestHistory',
                'verbose_name_plural': 't_EmployeeRequestHistory',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='EmployeeAuthSC',
            fields=[
                ('id', models.AutoField(db_column='EmployeeAuthID', primary_key=True, serialize=False, verbose_name='EmployeeAuthID')),
                ('sales_code', models.CharField(blank=True, db_column='SalesCode', max_length=50, verbose_name='SalesCode')),
                ('start_date', models.DateTimeField(auto_now_add=True, db_column='StartDate', verbose_name='StartDate')),
                ('end_date', models.DateTimeField(db_column='EndDate', default=datetime.datetime(2099, 1, 1, 0, 0), verbose_name='EndDate')),
                ('status', models.BooleanField(db_column='isActive', default=True, verbose_name='Status')),
                ('employee_code', models.ForeignKey(blank=True, db_column='EmployeeCode', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='EmployeeCode')),
            ],
            options={
                'verbose_name': 't_EmployeeAuthSC',
                'verbose_name_plural': 't_EmployeeAuthSC',
            },
        ),
        migrations.CreateModel(
            name='EmployeeAuthPC',
            fields=[
                ('id', models.AutoField(db_column='EmployeeAuthID', primary_key=True, serialize=False, verbose_name='EmployeeAuthID')),
                ('country_code', models.CharField(blank=True, db_column='CountryCode', max_length=2, null=True, verbose_name='CountryCode')),
                ('profit_center_code', models.CharField(blank=True, db_column='ProfitCenterCode', max_length=10, null=True, verbose_name='ProfitCenterCode')),
                ('start_date', models.DateTimeField(auto_now_add=True, db_column='StartDate', verbose_name='StartDate')),
                ('end_date', models.DateTimeField(db_column='EndDate', default=datetime.datetime(2099, 1, 1, 0, 0), verbose_name='EndDate')),
                ('status', models.BooleanField(db_column='Status', default=True, verbose_name='Status')),
                ('country', models.ForeignKey(blank=True, db_column='fk_country', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='country', to='management.country', verbose_name='country')),
                ('customer_group_id', models.ForeignKey(blank=True, db_column='CustomerGroupID', null=True, on_delete=django.db.models.deletion.SET_NULL, to='management.customergroup', verbose_name='CustomerGroupID')),
                ('employee_code', models.ForeignKey(blank=True, db_column='EmployeeCode', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='EmployeeCode')),
                ('profit_center', models.ForeignKey(blank=True, db_column='fk_profit_center', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mapping', to='management.profitcenter', verbose_name='profit_center')),
            ],
            options={
                'verbose_name': 't_EmployeeAuthPC',
                'verbose_name_plural': 't_EmployeeAuthPC',
            },
        ),
        migrations.CreateModel(
            name='EmployeeAuthDC',
            fields=[
                ('id', models.AutoField(db_column='EmployeeAuthID', primary_key=True, serialize=False, verbose_name='EmployeeAuthID')),
                ('client', models.CharField(blank=True, db_column='Client', max_length=50, verbose_name='Client')),
                ('dc_code', models.CharField(blank=True, db_column='DCCode', max_length=50, verbose_name='DCCode')),
                ('company_code', models.CharField(blank=True, db_column='CompanyCode', max_length=4, verbose_name='CompanyCode')),
                ('start_date', models.DateTimeField(auto_now_add=True, db_column='StartDate', verbose_name='StartDate')),
                ('end_date', models.DateTimeField(db_column='EndDate', default=datetime.datetime(2099, 1, 1, 0, 0), verbose_name='EndDate')),
                ('status', models.BooleanField(db_column='isActive', default=True, verbose_name='Status')),
                ('employee_code', models.ForeignKey(blank=True, db_column='EmployeeCode', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='EmployeeCode')),
            ],
            options={
                'verbose_name': 't_EmployeeAuthDC',
                'verbose_name_plural': 't_EmployeeAuthDC',
            },
        ),
    ]
